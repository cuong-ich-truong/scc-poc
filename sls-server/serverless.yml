
service: scc-sls-api

custom:
  guardTableName: 'java-guard-${self:provider.stage}'
  cameraTableName: 'java-camera-${self:provider.stage}'
  premiseTableName: 'java-premise-${self:provider.stage}'
  incidentTableName: 'java-incident-${self:provider.stage}'
  noteTableName: 'java-note-${self:provider.stage}'
  seed:
    guardsSeed:
      table: 'java-guard-${self:provider.stage}'
      sources:
        - database-seeds/guards.json
    premisesSeed:
      table: 'java-premise-${self:provider.stage}'
      sources:
        - database-seeds/premises.json
    camerasSeed:
      table: 'java-camera-${self:provider.stage}'
      sources:
        - database-seeds/cameras.json
    incidentsSeed:
      table: 'java-incident-${self:provider.stage}'
      sources:
        - database-seeds/incidents.json

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["GuardDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["CameraDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["PremiseDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["IncidentDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["NoteDynamoDBTable", "Arn" ] }
    - Effect: Allow
      Action:
        - sns:*
      Resource:
        - arn:aws:sns:us-east-1:052698802670:app/GCM/scc-poc-sns
  environment:
    GUARD_TABLE_NAME: ${self:custom.guardTableName}
    CAMERA_TABLE_NAME: ${self:custom.cameraTableName}
    PREMISE_TABLE_NAME: ${self:custom.premiseTableName}
    INCIDENT_TABLE_NAME: ${self:custom.incidentTableName}
    NOTE_TABLE_NAME: ${self:custom.noteTableName}
    SNS_PLATFORM_APPLICATION_ARN: arn:aws:sns:us-east-1:052698802670:app/GCM/scc-poc-sns

package:
  artifact: 'target/${self:service}-${self:provider.stage}.jar'

functions:
  getPremises:
    handler: com.serverless.GetPremisesHandler
    events:
      - http:
          path: /premises
          method: get
  getIncidentById:
    handler: com.serverless.GetIncidentByIdHandler
    events:
      - http:
          path: /incidents/{incidentId}
          method: get
  getIncidentsByGuardId:
    handler: com.serverless.GetIncidentsByGuardIdHandler
    events:
      - http:
          path: /incidents
          method: get
  getPremisesWithRelations:
    handler: com.serverless.GetPremisesWithRelationsHandler
    events:
      - http:
          path: /premises/relations
          method: get
          cors: true
  getCameras:
    handler: com.serverless.GetCamerasHandler
    events:
      - http:
          path: /cameras
          method: get
  getGuards:
    handler: com.serverless.GetGuardsHandler
    events:
      - http:
          path: /guards
          method: get
          cors: true
  createIncident:
    handler: com.serverless.CreateIncidentHandler
    events:
      - http:
          path: /incidents
          method: post
          cors: true
  getNotes:
    handler: com.serverless.GetNotesHandler
    events:
      - http:
          path: /notes
          method: get
  getNoteById:
    handler: com.serverless.GetNoteByIdHandler
    events:
      - http:
          path: /notes/{noteId}
          method: get
  createNote:
    handler: com.serverless.CreateNoteHandler
    events:
      - http:
          path: /notes
          method: post
  updateIncident:
    handler: com.serverless.UpdateIncidentHandler
    events:
      - http:
          path: /incidents/{incidentId}
          method: put
          cors: true
  updateGuard:
    handler: com.serverless.UpdateGuardTokenHandler
    events:
      - http:
          path: /guards/{guardId}/{token}
          method: put
        
plugins:
  - serverless-offline
  - serverless-dynamodb-seed

resources:
  Resources:
    GuardDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.guardTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    CameraDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.cameraTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    PremiseDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.premiseTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    IncidentDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.incidentTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    NoteDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.noteTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1